Name,Risk,Severity,Scope,Impact,Skills Required,Prerequisites,Mitigations
Query System for Information,High,Low,Confidentiality,Read Data,"Although fuzzing parameters is not difficult, and often possible with automated fuzzers, interpreting the error conditions and modifying the parameters so as to move further in the process of mapping the application requires detailed knowledge of target platform, the languages and packages used as well as software design.:LEVEL:Medium","This class of attacks does not strictly require authorized access to the application. As Attackers use this attack process to classify, map, and identify vulnerable aspects of an application, it simply requires hypotheses to be verified, interaction with the application, and time to conduct trial-and-error activities.","Application designers can construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are cataloged and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally.::Application designers can wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion."
Directory Indexing,High,Medium,Confidentiality,Confidentiality Read Data Information Leakage,To issue the request to URL without given a specific file name:LEVEL:Low::SKILL:To bypass the access control of the directory of listings:LEVEL:High,The target must be misconfigured to return a list of a directory's content when it receives a request that ends in a directory name rather than a file name.::The adversary must be able to control the path that is requested of the target.::The administrator must have failed to properly configure an ACL or has associated an overly permissive ACL with a particular directory.::The server version or patch level must not inherently prevent known directory listing attacks from working.,"1. Using blank index.html: putting blank index.html simply prevent directory listings from displaying to site visitors.::2. Preventing with .htaccess in Apache web server: In .htaccess, write Options-indexes.::3. Suppressing error messages: using error 403 Forbidden message exactly like error 404 Not Found message."
Fuzzing for application mapping,High,Low,Confidentiality,Confidentiality Other Information Leakage,"Although fuzzing parameters is not difficult, and often possible with automated fuzzing tools, interpreting the error conditions and modifying the parameters so as to move further in the process of mapping the application requires detailed knowledge of target platform, the languages and packages used as well as software design.:LEVEL:Medium",The target application must fail to sanitize incoming messages adequately before processing.,"Design: Construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are catalogued and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally.::Design: wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion.::Implementation: Obfuscate server fields of HTTP response.::Implementation: Hide inner ordering of HTTP response header.::Implementation: Customizing HTTP error codes such as 404 or 500.::Implementation: Hide HTTP response header software information filed.::Implementation: Hide cookie's software information filed.::Implementation: Obfuscate database type in Database API's error message."
Fuzzing for garnering other adjacent user/sensitive data,,Medium,,,,The server must assume that the queries it receives follow specific templates and/or have fields or attributes that follow specific procedures. The server must process queries that it receives without adequately checking or sanitizing queries to ensure they follow these templates.,
Cross-Domain Search Timing,,Medium,Confidentiality,Read Data,Some knowledge of Java Script:LEVEL:Low,Ability to issue GET / POST requests cross domainJava Script is enabled in the victim's browserThe victim has an active session with the site from which the attacker would like to receive informationThe victim's site does not protect search functionality with cross site request forgery (CSRF) protection,Design: The victim's site could protect all potentially sensitive functionality (e.g. search functions) with cross site request forgery (CSRF) protection and not perform any work on behalf of forged requests::Design: The browser's security model could be fixed to not leak timing information for cross domain requests
WSDL Scanning,High,High,Confidentiality,Read Data,"This attack can be as simple as reading WSDL and starting sending invalid request.:LEVEL:Low.This attack can be used to perform more sophisticated attacks (SQL injection, etc.):LEVEL:Medium",A client program connecting to a web service can read the WSDL to determine what functions are available on the server.::The target host exposes vulnerable functions within its WSDL interface.,It is important to protect WSDL file or provide limited access to it.::Review the functions exposed by the WSDL interface (especially if you have used a tool to generate it). Make sure that none of them is vulnerable to injection.::Ensure the WSDL does not expose functions and APIs that were not intended to be exposed.::Pay attention to the function naming convention (within the WSDL interface). Easy to guess function name may be an entry point for attack.::Validate the received messages against the WSDL Schema. Incomplete solution.
Pull Data from System Resources,,,,,,,
Probe Application Memory,Low,Medium,Confidentiality,Confidentiality Read Data A successful attack that probes application memory will compromise the confidentiality of that data.,The adversary requires the ability to traverse directory structure.:LEVEL:Low,The cloud provider must not assuredly delete part or all of the sensitive data for which they are responsible.The adversary must have the ability to interact with the system.,Cloud providers should completely delete data to render it irrecoverable and inaccessible from any layer and component of infrastructure resources.::Deletion of data should be completed promptly when requested.
Excavation,High,Medium,Confidentiality,Read Data,,An adversary requires some way of interacting with the system.,Minimize error/response output to only what is necessary for functional use or corrective language.::Remove potentially sensitive information that is not necessary for the application's functionality.
Collect Data from Common Resource Locations,,Medium,,,,"The targeted applications must either expect files to be located at a specific location or, if the location of the files can be configured by the user, the user either failed to move the files from the default location or placed them in a conventional location for files of the given type.",
White Box Reverse Engineering,,Medium,,,,Direct access to the object or softwareand information,
Lifting Sensitive Data Embedded in Cache,,Medium,,Disclosure of sensitive information,,The target application must store sensitive information in a cache.::The cache must be inadequately protected against attacker access.::,
Retrieve Embedded Sensitive Data,High,Very high,"Confidentiality,Integrity,Access Control,Authorization","Read Data,Modify Data,Gain Privileges",The attacker must possess knowledge of client code structure as well as ability to reverse-engineer or decompile it or probe it in other ways. This knowledge is specific to the technology and language used for the client distribution:LEVEL:Medium::,"In order to feasibly execute this type of attack, some valuable data must be present in client software.::Additionally, this information must be unprotected, or protected in a flawed fashion, or through a mechanism that fails to resist reverse engineering, statistical, or other attack.::",
Black Box Reverse Engineering,,Low,,,,,
Analysis of Packet Timing and Sizes,,Low,Confidentiality,Read Data Derive sensitive information about encrypted data.,These attacks generally require sophisticated machine learning techniques and require traffic capture as a prerequisite.:LEVEL:High::,"Use of untrusted communication paths enables an attacker to intercept and log communications, including metadata such as packet timing and sizes.:",Distort packet sizes and timing at VPN layer by adding padding to normalize packet sizes and timing delays to reduce information leakage via timing.
Electromagnetic Side-Channel Attack,,Low,Confidentiality,"Read Data Derive sensitive information about encrypted data. For mobile devices, depending on which keys are compromised, the attacker may be able to decrypt VOIP communications, impersonate the targeted caller, or access the enterprise VPN server.","Sophisticated attack, but detailed techniques published in the open literature.:LEVEL:Medium",Proximal access to the device,Utilize side-channel resistant implementations of all crypto algorithms.Strong physical security of all devices that contain secret key information. (even when devices are not in use)
Compromising Emanations,,Low,Confidentiality,Read Data Capture vibrations/emissions from the handset or retransmission device display screen to recreat display information from a distance.::,Sophisticated attack.:LEVEL:High::,Proximal access to the device,None are known
Protocol Analysis,Low,Low,"Confidentiality,Integrity","Confidentiality Read Data Successful deciphering of protocol information compromises the confidentiality of future sensitive communications,Modify Data.Integrity Modify Data Modifying communications after successful deciphering of protocol information compromises integrity.","Knowlegde of the Open Systems Interconnection model (OSI model), and famililarity with Wireshark or some other packet analyzer.:LEVEL:High::",Access to a binary executable.The ability to observe and interact with a communication channel between communicating processes.,
Cryptanalysis ,Low,Very high,Confidentiality,"Confidentiality Read Data In most cases, if cryptanalysis is successful at all, an adversary will not be able to decrypt the entire message, but instead will only be able to deduce some information about the plaintext. However, that may be sufficient for an adversary, depending on the context of the attack.",Cryptanalysis generally requires a very significant level of understanding of mathematics and computation.:LEVEL:High,The target software utilizes some sort of cryptographic algorithm.::An underlying weaknesses exists either in the cryptographic algorithm used or in the way that it was applied to a particular chunk of plaintext.The encryption algorithm is known to the attacker.::An attacker has access to the ciphertext.,Use proven cryptographic algorithms with recommended key sizes.Ensure that the algorithms are used properly. That means: 1. Not rolling out your own crypto; Use proven algorithms and implementations. 2. Choosing initialization vectors with sufficiently random numbers 3. Generating key material using good sources of randomness and avoiding known weak keys 4. Using proven protocols and their implementations. 5. Picking the most appropriate cryptographic algorithm for your usage context and data
Probe Application Memory,Low,Medium,Confidentiality,Confidentiality Read Data A successful attack that probes application memory will compromise the confidentiality of that data.,The adversary requires the ability to traverse directory structure.:LEVEL:Low::,The cloud provider must not assuredly delete part or all of the sensitive data for which they are responsible.The adversary must have the ability to interact with the system.::,Cloud providers should completely delete data to render it irrecoverable and inaccessible from any layer and component of infrastructure resources.::Deletion of data should be completed promptly when requested
Reverse Engineering ,Low,Low,,,"Understanding of low level programming languages or technologies can be very helpful. For example, when reverse engineering a binary file, an understanding of assembly languages can help to determine the purpose and inner-workings of the code. Another example is reverse engineering an application that relies on networking. Here, an understanding networking protocols can provide insight into application details.:LEVEL:High::","Access to targeted system, resources, and information",Employ code obfuscation techniques to prevent the adversary from reverse engineering the targeted entity.::
Leveraging Race Conditions,High,High,"Confidetiality, Access Control, Authorization, Integrity","Gain Privileges, Modify Data",Being able to "run the race" requires basic knowledge of concurrent processing including synchonization techniques.,"A resource is accessed/modified concurrently by multiple processes such that a race condition exists.
The adversary has the ability to modify the resource.","Use safe libraries to access resources such as files. Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition. Use synchronization to control the flow of execution. Use static analysis tools to find race conditions. Pay attention to concurrency problems related to the access of resources."
Manipulating State,Medium,High,"Confidetiality, Access Control, Authorization, Integrity, Availability","Gain Privileges, Modify Data, Unreliable Execution","The adversary needs to have knowledge of state management as employed by the target application, and also the ability to manipulate the state in a meaningful way.
","User state is maintained at least in some way in user-controllable locations, such as cookies or URL parameters.
There is a faulty finite state machine in the hardware logic that can be exploited.","Do not rely solely on user-controllable locations, such as cookies or URL parameters, to maintain user state.
Avoid sensitive information, such as usernames or authentication and authorization information, in user-controllable locations.
Sensitive information that is part of the user state must be appropriately protected to ensure confidentiality and integrity at each request.
All possible states must be handled by hardware finite state machines."
Shared Resource Manipulation,,Medium,,,,"The target applications, threads or functions must share resources between themselves.
The adversary must be able to manipulate some piece of the shared resource either directly or indirectly and the other users of the data must accept the changed data as valid. Usually this requires that the adversary be able to compromise one of the sharing applications or threads in order to manipulate the shared data.",
Hardware Fault Injection,Low,High,"Confidentiality, Integrity","Read Data, Bypass Protection Mechanism, Hide Activities, Execute Unauthorized Commands","Adversaries require non-trivial technical skills to create and implement fault injection attacks. Although this style of attack has become easier (commercial equipment and training classes are available to perform these attacks), they usual require significant setup and experimentation time during which physical access to the device is required.","Physical access to the system
The adversary must be cognizant of where fault injection vulnerabilities exist in the system in order to leverage them for exploitation.",Implement robust physical security countermeasures and monitoring.
Mobile Device Fault Injection,,,"Confidentiality, Access Control",Read Data,"Adversaries require non-trivial technical skills to create and implement fault injection attacks on mobile devices. Although this style of attack has become easier (commercial equipment and training classes are available to perform these attacks), they usual require significant setup and experimentation time during which physical access to the device is required. This prerequisite makes the attack challenging to perform (assuming that physical security countermeasures and monitoring are in place).",,"Strong physical security of all devices that contain secret key information. (even when devices are not in use)
Frequent changes to secret keys and certificates."
Interface Manipulation,Medium,Medium,,Access control and/or execute functionality not intended by the interface,,The target system must expose interface functionality in a manner that can be discovered and manipulated by an adversary. This may require reverse engineering the interface or decrypting/de-obfuscating client-server exchanges.,
Exploit Non-Production Interfaces,Low,High,"Confidentiality,Access Control,Authentication","Gain Privileges,Bypass Protection",Exploiting non-production interfaces requires significant skill and knowledge about the potential non-production interfaces left enabled in production.,The target must have configured non-production interfaces and failed to secure or remove them when brought into a production environment.,Ensure that production systems to not contain non-production interfaces and that these interfaces are only used in development environments.
Root/Jailbreak Detection Evasion via Debugging,Medium,Very High,"Integrity,Authorization",Execute Unauthorized Commands,"Knowledge about Root/Jailbreak detection and evasion techniques.:LEVEL:High, Knowledge about runtime debugging.:LEVEL:Medium::",A debugger must be able to be inserted into the targeted application.,Instantiate checks within the application code that ensures debuggers are not attached.
Functionality Misuse,Medium,Medium,Confidentiality,Gain Privileges,"General computer knowledge about how applications are launched, how they interact with input/output, and how they are configured.:LEVEL:Low::",The adversary has the capability to interact with the application directly.The target system does not adequately implement safeguards to prevent misuse of authorized actions/processes.,"Perform comprehensive threat modeling, a process of identifying, evaluating, and mitigating potential threats to the application. This effort can help reveal potentially obscure application functionality that can be manipulated for malicious purposes.When implementing security features, consider how they can be misused and compromised."
Content Spoofing,Medium,Medium,Integrity,Modify Data,,"The target must provide content but fail to adequately protect it against modification.The adversary must have the means to alter data to which they are not authorized. If the content is to be modified in transit, the adversary must be able to intercept the targeted messages.",
Counterfeit GPS Signals,Low,High,Integrity,Modify Data,The ability to spoof GPS signals is not trival.:LEVEL:High::,The target must be relying on valid GPS signal to perform critical operations.,
Resource Location Spoofing,Medium,Medium,Authorization,Execute Unauthorized Commands,,"All applications rely on file paths and therefore, in theory, they or their resources could be affected by this type of attack.",Monitor network activity to detect any anomalous or unauthorized communication exchanges.
Establish Rogue Location,Medium,Medium,"Confidentiality,Integrity",Read Data,Adversaries can often purchase low-cost technology to implement rogue access points.:LEVEL:Low::,A resource is expected to available to the user.,
Evil Twin Wi-Fi Attack,,Low,Confidentiality,Read Data,,,"Commercial defensive technology that monitors for rogue Wi-Fi access points, man-in-the-middle attacks, and anomalous activity with the mobile device baseband radios."
Cellular Rogue Base Station,,Low,Confidentiality,Read Data,This technique has been demonstrated by amateur hackers and commercial tools and open source projects are available to automate the attack.,,Passively monitor cellular network connection for real-time threat detection and logging for manual review.
